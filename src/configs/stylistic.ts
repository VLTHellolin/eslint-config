import type { FlatConfig } from '../types';
import pluginStylistic from '@stylistic/eslint-plugin';

export function stylistic(): FlatConfig {
  return [
    {
      name: 'hellolin/stylistic/rules',
      plugins: { style: pluginStylistic },
      rules: {
        'style/array-bracket-spacing': ['error', 'never'],
        'style/arrow-parens': ['error', 'as-needed'],
        'style/arrow-spacing': 'error',
        'style/block-spacing': 'error',
        'style/brace-style': ['error', '1tbs', { allowSingleLine: true }],
        'style/comma-dangle': ['error', 'always-multiline'],
        'style/comma-spacing': 'error',
        'style/comma-style': ['error', 'last'],
        'style/dot-location': ['error', 'property'],
        'style/eol-last': 'error',
        'style/function-call-argument-newline': ['error', 'consistent'],
        'style/function-call-spacing': ['error', 'never'],
        'style/function-paren-newline': ['error', 'consistent'],
        'style/generator-star-spacing': 'error',
        'style/indent': ['error', 2, {
          SwitchCase: 0,
          VariableDeclarator: 'first',
          offsetTernaryExpressions: true,
          ignoreComments: false,
          ignoredNodes: [
            'TSUnionType',
            'TSIntersectionType',
            'TSTypeParameterInstantiation',
            'FunctionExpression > .params[decorators.length > 0]',
            'FunctionExpression > .params > :matches(Decorator, :not(:first-child))',
          ],
        }],
        'style/indent-binary-ops': ['error', 2],
        'style/jsx-closing-bracket-location': ['error', 'tag-aligned'],
        'style/jsx-closing-tag-location': ['error', 'tag-aligned'],
        'style/jsx-equals-spacing': ['error', 'never'],
        'style/jsx-indent-props': ['error', 2],
        'style/jsx-pascal-case': ['warn', {
          allowNamespace: true,
          ignore: ['[A-Z]+'],
        }],
        'style/jsx-props-no-multi-spaces': 'error',
        'style/jsx-quotes': ['error', 'prefer-single'],
        'style/jsx-self-closing-comp': 'error',
        'style/jsx-tag-spacing': ['error', {
          beforeClosing: 'never',
          beforeSelfClosing: 'always',
        }],
        'style/key-spacing': 'error',
        'style/keyword-spacing': 'error',
        'style/member-delimiter-style': 'error',
        'style/no-extra-semi': 'error',
        'style/no-multi-spaces': 'error',
        'style/no-tabs': 'warn',
        'style/no-trailing-spaces': 'error',
        'style/no-whitespace-before-property': 'error',
        'style/object-curly-spacing': ['error', 'always'],
        'style/operator-linebreak': ['error', 'before'],
        'style/quote-props': ['error', 'consistent-as-needed'],
        'style/quotes': ['error', 'single'],
        'style/rest-spread-spacing': ['error', 'never'],
        'style/semi': 'error',
        'style/semi-spacing': 'error',
        'style/semi-style': 'error',
        'style/space-before-blocks': ['error', 'always'],
        'style/space-before-function-paren': ['error', { named: 'never' }],
        'style/space-unary-ops': 'error',
        'style/switch-colon-spacing': 'error',
        'style/type-annotation-spacing': 'error',
        'style/type-generic-spacing': 'error',
        'style/type-named-tuple-spacing': 'error',
        'style/yield-star-spacing': ['error', {
          before: true,
          after: false,
        }],
      },
    },
  ];
}
